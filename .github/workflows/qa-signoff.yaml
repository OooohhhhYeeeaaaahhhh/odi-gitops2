name: qa-signoff

on:
  # push:
  #   branches:
  #     - main
  #     - master
  # pull_request:
  #   branches:
  #     - main
  #     - master
  workflow_dispatch:
    # inputs:
    #   deploy:
    #     type: boolean
    #     description: Update config


env:
  # IMAGE_REGISTRY: docker.artifactory.banno-tools.com
  # IMAGE_NAME: odi-processor-service
  # PRODUCT: jh-digitalcore  
  IMAGE_REGISTRY: ballin24x7
  IMAGE_NAME: odi-gitops2
  PRODUCT: labs
  DOCKER_FILE:  devops/scripts/Release.Dockerfile
  PROJECT_FILE: src/WebApplication2.csproj
  GIT_HASH:
  DOCKER_FILE_TEMPLATE:  devops/scripts/Release.Dockerfile.Template

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Setting variables for Docker Image Tag
        run: |
          echo "DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV
          echo "GIT_HASH=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Display Github Runner Agent Environment variables
        run: |
          env | sort

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          #password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish processor
        run: dotnet publish ${{env.PROJECT_FILE}} -c Release --no-self-contained --runtime linux-musl-x64 -o src/out

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          file: ${{ env.DOCKER_FILE }}
          context: ./src/out
          provenance: false
          push: true
          # tags: |
            # ${{ env.IMAGE_REGISTRY }}/${{ env.PRODUCT }}/${{env.IMAGE_NAME}}:latest
            # ${{ env.IMAGE_REGISTRY }}/${{ env.PRODUCT }}/${{env.IMAGE_NAME}}:${{ env.DATE }}${{ github.RUN_NUMBER }}
            # ${{ env.IMAGE_REGISTRY }}/${{ env.PRODUCT }}/${{env.IMAGE_NAME}}:${{ env.GIT_HASH }}      
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{env.IMAGE_NAME}}:latest
            ${{ env.IMAGE_REGISTRY }}/${{env.IMAGE_NAME}}:release
            ${{ env.IMAGE_REGISTRY }}/${{env.IMAGE_NAME}}:gold
            ${{ env.IMAGE_REGISTRY }}/${{env.IMAGE_NAME}}:${{ env.DATE }}${{ github.RUN_NUMBER }}
            ${{ env.IMAGE_REGISTRY }}/${{env.IMAGE_NAME}}:${{ env.GIT_HASH }}   
    outputs:
      DOCKERFILE_HASH: ${{ env.GIT_HASH }}
  output-job:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - env:
          OUTPUT1: ${{needs.docker.outputs.DOCKERFILE_HASH}}   
        run: echo "$OUTPUT1" 
  update-repo:
    runs-on: ubuntu-latest
    needs: output-job
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set image tag
        id: setimagetag
        shell: pwsh
        run: |
          #Get-Content -Path ${{ env.DOCKER_FILE_TEMPLATE }}
          (Get-Content -Path ${{ env.DOCKER_FILE_TEMPLATE }}).Replace(":<image-tag>",":123abc") | Set-Content -Path ${{ env.DOCKER_FILE }}
          # $Data = Get-Content -Path ${{ env.DOCKER_FILE_TEMPLATE }}
          # $Data.Replace(":<image-tag>",":123abc")

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4

      # - name: Overwrite file
      #   uses: "DamianReeves/write-file-action@master"
      #   with:
      #     path: devops/scripts/output.txt
      #     write-mode: overwrite
      #     contents: |
      #       console.log('some contents')
            
      # - name: Commit & Push
      #   uses: Andro999b/push@v1.3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: main
      #     force: true
      #     message: 'Overwritten by Github Actions - ${date}'         